# Voicify Project Rules

## Code Organization
- Maintain clear separation between cmd/, internal/, and pkg/ directories
- Keep plugin implementations in the plugins/ directory
- Follow Go package naming conventions
- Use internal packages for code not intended for external use

## Coding Patterns
- Use interfaces for extensibility, especially for display server handlers and plugins
- Implement error handling consistently with proper user feedback
- Follow Go error handling conventions (return errors, don't use exceptions)
- Use dependency injection for better testability
- Keep functions focused and small

## Project Conventions
- Configuration file location: $HOME/.config/voicify/voicify.yaml
- Use YAML for configuration files
- Follow semantic versioning for releases
- Implement graceful degradation when services are unavailable

## Documentation Patterns
- Maintain clear comments for exported functions and types
- Use README.md for high-level documentation
- Document plugin development process

## Testing Approach
- Write unit tests for core functionality
- Implement integration tests for end-to-end workflows
- Test on both X11 and Wayland environments

## User Preferences
- Provide sensible defaults for configuration
- Make all key bindings configurable
- Allow plugin selection and configuration

## Known Implementation Paths
- Use factory pattern for creating appropriate display server handlers
- Implement plugin system using interfaces and reflection
- Use Go's context for managing cancellation and timeouts
- Implement graceful shutdown mechanism
